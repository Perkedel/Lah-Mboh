// Oke here we go
// (JOELwindows7)

class LevelSelectNow
{
	static void doLevelSelectNow(){
		// https://zdoom.org/wiki/ActivateMenu
		// https://zdoom.org/wiki/SetMenu
		//let levelMenu = new("LevelSelectNowMenu");
		//levelMenu.init(Menu.currentMenu());
		//levelMenu.activateMenu();
		
		Menu.setMenu("LevelSelectNowMenu");
	}
}

class HardCodeLevelName //: Actor
{
	string level;
	string label;
	LevelInfo info;

	static HardCodeLevelName Create(string level, string label = "")
	{
		let h = New('HardCodeLevelName');
		if(h)
		{
			h.level = level;
			h.label = label;
			h.info = LevelInfo.FindLevelInfo(level);
		}
		return h;
	}
}

class LMBH_ScannableLevelName : Actor Abstract
{
	// use m8f's ways of StupidAchievement. Extract the parameter into HardCodeLevelName!
	string level;
	string label;

	property level: level;
	property label: label;

	Default
	{
		LMBH_ScannableLevelName.level "TEST";
		LMBH_ScannableLevelName.label "";
	}
}

class LMBH_ScannableLevelHandler: StaticEventHandler
{
	// same goes with the handler.

}

class LevelSelectNowHandler : LMBH_ZF_Handler
{
	LevelSelectNowMenu link;

	override void elementHoverChanged(LMBH_ZF_Element caller, Name command, bool unhovered) 
	{
		// I gotta Jmod again!
		If(unhovered||!(caller is "LMBH_ZF_Button")){Return;}
		link.SetFocus(caller,LMBH_ZF_NavEventType_Tab);
	}
	
	override void buttonClickCommand(LMBH_ZF_Button caller, Name command)
	{
		// pls why switch case only numbers not string?! Don't make me look like that guy.
		// https://zdoom.org/wiki/ChangeLevel_(ZScript)
		// https://zdoom.org/wiki/String
		String nameSake = command;
		//Array<String> breakItDown = LevelSelectNowMenu.breaklevelCommand(nameSake);
		Array<String> breakItDown ;
		nameSake.split(breakItDown, "::");
		if(breakItDown[0] == "L")
		{
			console.printf("GO to Level: %s", breakItDown[1]);
			Level.ChangeLevel(breakItDown[1],0,CHANGELEVEL_NOINTERMISSION,-1);
			link.Close();
		}
		// PAIN IS TEMPORARY, GLORY IS FOREVER
		else
		{
			console.printf("GO to %s", command);
			// if command preceded by `L-` then call acs of that thing there!
		}
	}
}

class LMHB_ZF_BaseGenericMenu : LMBH_ZF_GenericMenu
{

}

class LevelSelectNowMenu : LMBH_ZF_GenericMenu 
{
	LMBH_ZF_ListFrame liste;
	LMBH_ZF_Image background;
	Font smallFont, conFont;
	Array<HardCodeLevelName> hardCodeLevels;
	Array<LMBH_ZF_Element> levelButtons;
	LMBH_ZF_Label sayLabel, levelTitleSay, levelInfoBox;
	LMBH_ZF_Image levelScreenshot;
	// static const HardCodeLevelName hardCodeLevels[] = 
	// {
	// 	HardCodeLevelName.Create("MBOHADV")
	// };

	// The return type cannot be dynamic array. Argh bullshit! wtf, GZdoom?!
	/*
	static Array<String> breakLevelCommand(String cmd)
	{
		Array<String> breakItDown;
		cmd.split(breakItDown, "::");
		return breakItDown;
	}
	*/

	static String timerToString(int t)
	{
		int timed = t / 35;
		// https://zdoom.org/wiki/Timer
		return String.format("%d:%d%d", timed/60, (timed%60)/10, (timed%10));
	}

	void bringFocuses()
	{
		// Let's give these level buttons their next focuses.
		/*
		If you press Up key, go to previous button. Down, next.

		Also remember, C except lua, array starts from 0. idk why Lua's 1, go complain all you want.
		*/
		for(int i = 0; i < levelButtons.size(); i++)
		{
			// Go up. If element is not first, there's previous, otherwise go to last
			if(i > 0) 
			{
				levelButtons[i].setFocusNeighbor(LMBH_ZF_NavEventType_Up,levelButtons[i-1]);
			}
			else 
			{
				levelButtons[i].setFocusNeighbor(LMBH_ZF_NavEventType_Up,levelButtons[levelButtons.size()-1]);
			}

			// Go down. If element is not last, there's next, otherwise go to first
			if(i < levelButtons.size()-1) 
			{
				levelButtons[i].setFocusNeighbor(LMBH_ZF_NavEventType_Down,levelButtons[i+1]);
			}
			else 
			{
				levelButtons[i].setFocusNeighbor(LMBH_ZF_NavEventType_Down,levelButtons[0]);
			}
		}

		// now let's focus on the first button!
		if(levelButtons.size() > 0){
			setFocus(levelButtons[0], LMBH_ZF_NavEventType_FocusChangeCount);
		}
	}

	void bringHardCodeLevelNames()
	{
		// This is jank hack! idk how to specialize level selection list
		/*
		But we should've rely just on the Episode menu, no?
		Yeah, we'll have alot, just like those Upstarts. That's why e.g. 
		RAMP has hundreds of shrines, each represents a level to go to.

		hey, atleast we can add more data within later, all just within the text file.
		Yeah I know.. hardcode, yuck! idk anymore how else we define it by JSON just for bespoke?!
		*/
		// https://zdoom.org/wiki/Arrays
		// https://zdoom.org/wiki/ZScript_data_types#Arrays
		// https://zdoom.org/wiki/Dynamic_arrays
		// https://zdoom.org/wiki/Structs:LevelInfo

		// clear first! the buttons, then the definition itself! this order surely avoids Null Pointer reference I think.
		levelButtons.clear();
		hardCodeLevels.clear();

		// Now add here!
		hardCodeLevels.push(HardCodeLevelName.Create("MBH01", String.Format("(MEGAWAD) %s", StringTable.Localize("$MBOHADV"))));
		hardCodeLevels.push(HardCodeLevelName.Create("JUSTFITE", StringTable.Localize("$JUSTFITE")));
		hardCodeLevels.push(HardCodeLevelName.Create("RIGHTFRN", StringTable.Localize("$RIGHTFRN")));
		hardCodeLevels.push(HardCodeLevelName.Create("PLMSKY1", StringTable.Localize("$PLMSKY1")));
		hardCodeLevels.push(HardCodeLevelName.Create("MECHSKY1", StringTable.Localize("$MECHSKY1")));
		hardCodeLevels.push(HardCodeLevelName.Create("CHORALBE", StringTable.Localize("$CHORALBE")));
		hardCodeLevels.push(HardCodeLevelName.Create("FREELD", StringTable.Localize("$FREELD")));
		hardCodeLevels.push(HardCodeLevelName.Create("TELEFAST", StringTable.Localize("$TELEFAST")));
		hardCodeLevels.push(HardCodeLevelName.Create("DONUTER", StringTable.Localize("$DONUTER")));
		hardCodeLevels.push(HardCodeLevelName.Create("PORTALA", StringTable.Localize("$PORTALA")));
		hardCodeLevels.push(HardCodeLevelName.Create("TOTITLE", StringTable.Localize("$TOTITLE")));
		hardCodeLevels.push(HardCodeLevelName.Create("TOTITLE2", StringTable.Localize("$TOTITLE2")));
		hardCodeLevels.push(HardCodeLevelName.Create("TOTITLE3", StringTable.Localize("$TOTITLE3")));
		hardCodeLevels.push(HardCodeLevelName.Create("MORATE", StringTable.Localize("$MORATE")));
		hardCodeLevels.push(HardCodeLevelName.Create("SELDUAR", String.Format("(DM) %s", StringTable.Localize("$SELDUAR"))));
		hardCodeLevels.push(HardCodeLevelName.Create("DODTEL", StringTable.Localize("$DODTEL")));
		hardCodeLevels.push(HardCodeLevelName.Create("WRWDEMO", StringTable.Localize("$WRWDEMO")));
		hardCodeLevels.push(HardCodeLevelName.Create("MRWDEMO", StringTable.Localize("$MRWDEMO")));
		hardCodeLevels.push(HardCodeLevelName.Create("T_SCTTG", StringTable.Localize("$T_SCTTG")));
		hardCodeLevels.push(HardCodeLevelName.Create("T_CUZOM", StringTable.Localize("$T_CUZOM")));
		hardCodeLevels.push(HardCodeLevelName.Create("T_RSPAWN", StringTable.Localize("$T_RSPAWN")));
		hardCodeLevels.push(HardCodeLevelName.Create("T_CA_OUT", StringTable.Localize("$T_CA_OUT")));
		hardCodeLevels.push(HardCodeLevelName.Create("T_NJ_BGL", StringTable.Localize("$T_NJ_BGL")));
		// hardCodeLevels.push(HardCodeLevelName.Create("LOADFOL", StringTable.Localize("$LOADFOL"))); // Sorry, map wads cannot be in a subfolder unlike everyone else.
		hardCodeLevels.push(HardCodeLevelName.Create("LoadFolder/LOADFOL", StringTable.Localize("$LOADFOL"))); // Unless we explicitly say the folder too?
		// hardCodeLevels.push(HardCodeLevelName.Create("T_SMMU", StringTable.Localize("$SMMUTEST")));
		hardCodeLevels.push(HardCodeLevelName.Create("SMMUTEST", StringTable.Localize("$SMMUTEST")));
		hardCodeLevels.push(HardCodeLevelName.Create("Chubzdoomer/CHBZSD", StringTable.Localize("$CHBZSD")));
		hardCodeLevels.push(HardCodeLevelName.Create("TEST", StringTable.Localize("$_GENERIC_TEST")));

		// Then scan the level. Whoever Mod PK3 that has class of this HardCodeLevelName with property parameters on it.
	}
	
	override void init (Menu parent)
	{
		LevelSelectNowHandler handler;

		bringHardCodeLevelNames();
		// hardCodeLevels = {
		// 	HardCodeLevelName("MBOHADV"),
		// };
		
		Vector2 baseRes = (640, 400);
		Super.init(parent);
		SetBaseResolution (baseRes);
		
		 // Get GZDoom's new options menu smallfont.
        smallFont = OptionFont ();
		conFont = Font.GetFont("UbuntuC");
		
		handler = new ('LevelSelectNowHandler');
		handler.link = self;
		
		LMBH_ZF_Element elem;
		
		// double daHeight = 256+128+128+128;
		double daHeight = (hardCodeLevels.size() * 16) + 128;
		// Create the box image's textures.
        let boxTexture = LMBH_ZF_BoxTextures.CreateTexturePixels
        (
            // The texture itself.
            "graphics/Box8x8.png",
            // The top-left corner of the middle of the box.
            (2, 2),
            // The bottom-right corner of the middle of the box.
            (6, 6),
            // Whether to scale (true) or tile (false) the sides.
            false,
            // Whether to scale (true) or tile (false) the middle.
            false
        );
		let boxBackground = LMBH_ZF_BoxTextures.CreateTexturePixels
        (
            // The texture itself.
            "graphics/Box8x8Bg.png",
            // The top-left corner of the middle of the box.
            (2, 2),
            // The bottom-right corner of the middle of the box.
            (6, 6),
            // Whether to scale (true) or tile (false) the sides.
            false,
            // Whether to scale (true) or tile (false) the middle.
            false
        );
		// Add a background.
        background = LMBH_ZF_Image.Create
        // background = LMBH_ZF_BoxImage.Create
        (
            // Position
            (0, 0),
            // Size
            // (320, 200),
            (640, 400),
            // Image path/name
            //"graphics/ZFormsExamples/Panel.png",
            "graphics/Box8x8Bg.png",
            // boxBackground,
            // Alignment options
            LMBH_ZF_Image.AlignType_TopLeft,
			// make it tiled
			tiled:1
        );
        // Add the image element into the main frame.
        background.Pack (mainFrame);
        
         

		let focusBox = LMBH_ZF_BoxTextures.CreateTexturePixels (
			//"Graphics/FocusIndicator.png",
			"graphics/Box8x8Focus.png",
			(2, 2),
			(6, 6),
			false,
			false
		);

        
        //Scrollact Jmodded
        let scrollactContainer = LMBH_ZF_ScrollContainer.Create(
        	(240,32),
        	(640-240,380-24),
        	8,	
        	daHeight,
        	32,
        	boxTexture
        );
        scrollactContainer.Pack(mainFrame);
        let scrollactFrame = LMBH_ZF_Frame(scrollactContainer.GetScrollArea());
        
        
        // Textoid
        elem = LMBH_ZF_Label.create(
        	(8,16),
        	(640,16),
        	StringTable.Localize("$GOTOLEVELSAY"),
        	smallFont
        );
        elem.Pack(mainFrame);
		
        // Test Textoid
		/*
		sayLabel = LMBH_ZF_Label.create(
        	(128,16),
        	(640-128,16),
        	StringTable.Localize("..."),
        	conFont
        );
		sayLabel.Pack(mainFrame);
		*/

		// Level Infos!
		levelScreenshot = LMBH_ZF_Image.create
		(
			(0,32),
			(240,140),
			"graphics/ForumCover.png",
			LMBH_ZF_Image.AlignType_TopLeft,
			imageScale: (0.125, 0.125)
		);
		levelScreenshot.pack(mainFrame);

		levelTitleSay = LMBH_ZF_Label.create(
        	(8,32+140),
        	(240,16),
        	StringTable.Localize("..."),
        	smallFont
        );
		levelTitleSay.pack(mainFrame);

		levelInfoBox = LMBH_ZF_Label.create(
        	(8,32+140+16),
        	(240,500),
        	StringTable.Localize("..."),
        	conFont
        );
		levelInfoBox.pack(mainFrame);
        // list
		
        liste = LMBH_ZF_ListFrame.create(
        	(0,0),
        	(640-16-240,daHeight+16), // 320, daHeight
        	4	
        );
        liste.Pack(scrollactFrame);
        

        //Level now
		for(int i = 0; i < hardCodeLevels.size(); i++)
		{
			string compensateLabel = hardCodeLevels[i].label;
			if(compensateLabel == "") compensateLabel = StringTable.Localize(String.Format("$%s",hardCodeLevels[i].level));
			elem = LMBH_ZF_Button.create(
				(8,(16*i)),
				(640-16-240,16),
				text: compensateLabel,
				cmdHandler: handler,
				command: String.Format("L::%s",hardCodeLevels[i].level)
				//, hover: focusBox
				, fnt: conFont
			);
			// elem.Pack(scrollactFrame);
			elem.Pack(liste);
			levelButtons.push(elem);
		}
		
		bringFocuses();

		// PAIN IS TEMPORARY, GLORY IS FOREVER
	}

	override void setupFocusIndicator() {
		let focusBox = LMBH_ZF_BoxTextures.CreateTexturePixels (
			//"Graphics/FocusIndicator.png",
			"graphics/Box8x8Focus.png",
			(2, 2),
			(6, 6),
			false,
			false
		);

		setFocusIndicator(LMBH_ZF_BoxImage.create((0, 0), (0, 0), focusBox));
		setFocusPriority(LMBH_ZF_FocusPriority_JustAboveFocused);
	}
	override void positionFocusIndicator(Vector2 pos, Vector2 size) {
		getFocusIndicator().setBox(pos, size);
	}
	override void changeFocusIndicator(LMBH_ZF_Element oldFocus, LMBH_ZF_Element newFocus)
	{
		super.changeFocusIndicator(oldFocus,newFocus);
		LevelInfo levelInfo;
		//Console.printf("FOCUS: %s", newFocus.getCommand());
		//Array<String> brokenDownLevel = breakLevelCommand(newFocus.command);
		if(!newFocus) {return;}
		String nameSake = newFocus.getCommand();
		if(nameSake.length() > 0)
		{
			Array<String> brokenDownLevel;
			nameSake.split(brokenDownLevel, "::");
			// in Haxe there's inliner here, idk how does that work but I think it's what I meant
			/*
			To bring that entire function thingy right on place on compile rather than referencing it.
			yeah don't know how that worked.
			*/
			if(brokenDownLevel[0] == "L")
			{
				// https://zdoom.org/wiki/Structs:LevelInfo
				levelInfo = LevelInfo.FindLevelInfo(brokenDownLevel[1]);
				/*
				if(sayLabel)
				{
					sayLabel.setText(levelInfo.authorName);
				}
				*/
				if(levelInfo)
				{
					String titler = levelInfo.mapName;
					String descBox = levelInfo.authorName.."\n\n";
					// alas, no way to load how many monsters, items, & secrets without being in it first.
					//descBox = descbox .. "M = " .. "\n";
					//descBox = descbox .. "I = " .. "\n";
					//descBox = descbox .. "S = " .. levelInfo.Total_Secrets .. "\n";
					descBox = descbox .. "\n";
					descBox = descbox .. "Par = " .. timerToString(levelInfo.parTime) .. "\n";
					if(levelScreenshot)
					{

					}
					if(levelTitleSay)
					{
						levelTitleSay.setText(titler);
					}
					if(levelInfoBox)
					{
						levelInfoBox.setText(descBox);
					}
				}
			}
		}
	}
}