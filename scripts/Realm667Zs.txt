// Realm667 Assets Collections ZScripts
// Amalgamated by JOELwindows7

// Insanity Sphere. DBJ87, That_One_Doom_Mod, BlueShadow, originally from id Software x Midway DOOM 64
// https://www.realm667.com/repository/item-store/powerups-artifacts#preview-30
// ------------------------------------------------------------------------------------------------
//
//   Insanity
//
//     - Written by Blue Shadow.
//
// ------------------------------------------------------------------------------------------------

class PowerInsanity : Powerup
{
	int defDur;

	override void AttachToOwner (Actor other)
	{
		Super.AttachToOwner(other);

		// Get the default duration of the powerup.
		defDur = GetDefaultByType("InsanityStart").EffectTics;
	}

	override void InitEffect ()
	{
		Super.InitEffect();

		if(owner != null && owner.player != null)
		{
			owner.A_PlaySound("InsanitySphere/Start", CHAN_BODY, 0.7);
		}
	}

	override void DoEffect ()
	{
		Super.DoEffect();

		if(owner != null && owner.player != null)
		{
			// Play the "half" sound when the powerup is at half duration.
			if(EffectTics == (defDur >> 1))
			{
				owner.A_PlaySound("InsanitySphere/Half", CHAN_BODY, 0.7);
			}

			// Play the "end" sound when the powerup is at the blinking stage.
			if(EffectTics == BLINKTHRESHOLD)
			{
				owner.A_PlaySound("InsanitySphere/End", CHAN_BODY, 0.7);
			}
		}
	}

	override void OwnerDied ()
	{
		if(owner != null && owner.player != null)
		{
			// Owner is dead, so stop whatever sound that's playing on the "body" channel.
			owner.A_StopSound(CHAN_BODY);
		}

		Super.OwnerDied();
	}
}


// Checkpoint Disk. Matacrat
/*
Name: Checkpoint Disk / Save Disk
Type: Checkpoint / Powerup
Palette: Doom
Summon: sp_SaveDisk
Use type: Instant
Duration: 1 to 3 Seconds.
Brightmaps: No
Actor modification: No
ACS: Yes

Code: Matacrat (and a bit of Korshun)
GLDefs: Matacrat
Sounds: EarthBound's Healing Sound and Tomb Raider's Secret Sound
Sprites: Save Disk Graphic (STDISK) from Id Software
Sprite Edit: None
Idea Base: Exl's Save Disk System and BioHazard's Checkpoint system.
*/
class sp_MultiplayerAutosave
{
    static clearscope void sp_ZscriptAutoSave()
    {
        LevelLocals.MakeAutoSave();
    }
}

// acquired mapper block syndrome

// Crates Rifleman
// https://www.realm667.com/repository/prop-stop/technical#preview-8
/*
Information:
Name: Crate Models
Connection: N/A
Palette: Doom
Summon: Cube[32, 64][Blue, Green, Brown], Crate[32, 64, 128][Clean, Plank, Cross]
Ambient Sound: N/A
De-/Activatable: N/A
Destroyable: N/A
Special Effects: N/A
Brightmaps: N/A
Actor modification: N/A
ACS: N/A

Credits:
Code: Rifleman
GLDefs: N/A
Sounds: N/A
Sprites: OTEX by ukiro
Sprite Edit: Rifleman
Idea Base: No need to make crates with sectors.

Description:
15 models of crates - no need to draw sectors or use 3d floors.
*/
Class Cube64 : Actor
{
	//TODO: Make breakable
	bool user_breakable;

	Default
	{
	Health 1;
	Radius 38;
	Height 64;
	+DontThrust;
	+Solid;
	+PuffOnActors;
	+Shootable;
	+NoDamage;
	+NoBlood;
	+NotAutoaimed;
	+CANPASS;
	+ACTLIKEBRIDGE;
	}
	States
	{
		Spawn:
		TNT1 A -1;
		Stop;
	}
}

Class Cube64Blue : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 64x64 Blue
	}
	States
	{
		Spawn:
		TCBL A -1;
		Stop;
	}
}
Class Cube64Green : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 64x64 Green
	}
	States
	{
		Spawn:
		TCGR A -1;
		Stop;
	}
}
Class Cube64Brown : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 64x64 Brown
	}
	States
	{
		Spawn:
		TCBR A -1;
		Stop;
	}
}
Class Crate64Clean : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 64x64 Clean
	}
	States
	{
		Spawn:
		CRCL A -1;
		Stop;
	}
}
Class Crate64Plank : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 64x64 Plank
	}
	States
	{
		Spawn:
		CRPL A -1;
		Stop;
	}
}
Class Crate64Cross : Cube64
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 64x64 Cross
	}
	States
	{
		Spawn:
		CRCR A -1;
		Stop;
	}
}

Class Cube128 : Cube64
{
	Default
	{
	
	Health 1;
	Radius 76;
	Height 128;
	}
	States
	{
		Spawn:
		FCAN A -1;
		Stop;
	}
}

Class Crate128Clean : Cube128
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 128x128 Clean
	}
	States
	{
		Spawn:
		CRCL A -1;
		Stop;
	}
}
Class Crate128Plank : Cube128
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 128x128 Plank
	}
	States
	{
		Spawn:
		CRPL A -1;
		Stop;
	}
}
Class Crate128Cross : Cube128
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 128x128 Cross
	}
	States
	{
		Spawn:
		CRCR A -1;
		Stop;
	}
}

Class Cube32 : Cube64
{
	Default
	{
	Health 1;
	Radius 20;
	Height 32;
	}
	States
	{
		Spawn:
		FCAN A -1;
		Stop;
	}
}

Class Cube32Blue : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 32x32 Blue
	}
	States
	{
		Spawn:
		TCBL A -1;
		Stop;
	}
}

Class Cube32Green : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 32x32 Green
	}
	States
	{
		Spawn:
		TCGR A -1;
		Stop;
	}
}

Class Cube32Brown : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title TechCrate 32x32 Brown
	}
	States
	{
		Spawn:
		TCBR A -1;
		Stop;
	}
}

Class Crate32Clean : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 32x32 Clean
	}
	States
	{
		Spawn:
		CRCL A -1;
		Stop;
	}
}
Class Crate32Plank : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 32x32 Plank
	}
	States
	{
		Spawn:
		CRPL A -1;
		Stop;
	}
}
Class Crate32Cross : Cube32
{
	Default
	{
	//$Category Decoration/Crate Models
	//$Title Crate 32x32 Cross
	}
	States
	{
		Spawn:
		CRCR A -1;
		Stop;
	}
}

// It's time for:
/*
*************************************************
*
*
*			MONSTER RESOURCE WAD
*			DEFINITIVE EDITION
*
*
*
*************************************************
*/
// Dark Imp Pack here 
// https://www.realm667.com/repository/beastiary/doom-style?start=60#preview-6
// Dark Imp Nanami
/*
Name: Dark Imp (Nami)
Difficulty: Easy
Connections: None
Summon: NamiDarkImp
Melee: Yes
Distance: Projectile
Type: Demon
Brightmaps: No
Actor modification: No
ACS: No

Code: Nanami, Itsnaturetodie, Ghastly (ZScript conversion)
GLDefs: Ghastly
Sounds: Id Software
Sprites: Id Software
Sprite Edit: Nanami, Itsnaturetodie
*/
Class NamiDarkImp : Actor
{
  Default
  {
    Health 105;
    Radius 20;
    Height 56;
    Speed 8;
    PainChance 200;
    SeeSound "imp/sight";
    PainSound "imp/pain";
    DeathSound "imp/death";
    ActiveSound "imp/active";
    Obituary "%o was cursed by a dark imp.";
    HitObituary "%o was touched by a dark imp.";
    MONSTER;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    DRKI AB 10 A_Look();
    Loop;
  See:
    DRKI AABBCCDD 3 A_Chase();
    Loop;
  Melee:
  Missile:
    DRKI EF 8 A_FaceTarget();
    DRKI G 6 A_CustomComboAttack("DarkSeeker", 32, 3*random(1,8), "imp/melee");
    Goto See;
  Pain:
    DRKI H 2;
    DRKI H 2 A_Pain();
    Goto See;
  Death:
    DRKI I 8;
    DRKI J 8 A_Scream();
    DRKI K 6;
    DRKI L 6 A_Fall();
    DRKI M -1;
    Stop;
  XDeath:
    DRKI N 5;
    DRKI O 5 A_XScream();
    DRKI P 5;
    DRKI Q 5 A_Fall();
    DRKI RST 5;
    DRKI U -1;
    Stop;
  Raise:
    DRKI ML 8;
    DRKI KJI 6;
    Goto See;
  }
}

Class DarkSeeker : Actor
{
  Default
  {
    Radius 8;
    Height 6;
    Speed 9;
    Damage 3;
    RENDERSTYLE "ADD";
    ALPHA 0.67;
    SeeSound "imp/attack";
    DeathSound "imp/shotx";
    Decal "DoomImpScorch";
    PROJECTILE;
    +SEEKERMISSILE
  }

  States
  {
  Spawn:
    DKB1 AB 4 Bright A_SeekerMissile(5,10);
    Loop;
  Death:
    DKB1 CDE 4 Bright;
    Stop;
  }
}
// Skulltag Dark Imp
/*
Name: Dark Imp (Skulltag)
Difficulty: Easy
Connection: None
Summon: STDarkImp
Melee: Yes
Distance: Projectile
Type: Demon
Brightmaps: Yes
Actor modification: No
ACS: No

Code: Skulltag, Vader, Ghastly (ZScript conversion)
GLDefs: Ghastly, Sandypaper (Brightmaps)
Sounds: Id Software
Sprites: Id Software
Sprite Edit: Vader
Idea Base: Skulltag
*/
Class STDarkImp : Actor
{
  Default
  {
    Health 110;
    Radius 20;
    Height 56;
    Speed 9;
    PainChance 200;
    SeeSound "imp/sight";
    PainSound "imp/pain";
    DeathSound "imp/death";
    ActiveSound "imp/active";
    Obituary "%o was cursed by a dark imp.";
    HitObituary "%o was touched by a dark imp.";
    MONSTER;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    DRKS AB 10 A_Look();
    Loop;
  See:
    DRKS AABBCCDD 3 A_Chase();
    Loop;
  Melee:
  Missile:
    DRKS EF 8 A_FaceTarget();
    DRKS G 6 A_CustomComboAttack("DarkFast", 32, 3*random(1,8), "imp/melee");
    Goto See;
  Pain:
    DRKS H 2;
    DRKS H 2 A_Pain();
    Goto See;
  Death:
    DRKS I 8;
    DRKS J 8 A_Scream();
    DRKS K 6;
    DRKS L 6 A_Fall();
    DRKS M -1;
    Stop;
  XDeath:
    DRKI N 5;
    DRKI O 5 A_XScream();
    DRKI P 5;
    DRKI Q 5 A_Fall();
    DRKI RST 5;
    DRKI U -1;
    Stop;
  Raise:
    DRKS ML 8;
    DRKS KJI 6;
    Goto See;
  }
}

Class DarkFast : Actor
{
  Default
  {
    Radius 8;
    Height 6;
    Speed 18;
    Damage 3;
    RENDERSTYLE "ADD";
    ALPHA 0.67;
    SeeSound "imp/attack";
    DeathSound "imp/shotx";
    Decal "DoomImpScorch";
    PROJECTILE;
  }

  States
  {
  Spawn:
    DKB1 AB 4 Bright;
    Loop;
  Death:
    DKB1 CDE 4 Bright;
    Stop;
  }
}

// Void Dark Imp
/*
Name: Dark Imp (Void)
Difficulty: Easy
Connections: None
Summon: VoidDarkImp
Melee: Yes
Distance: Projectile
Type: Demon
Brightmaps: Yes
Actor modification: No
ACS: No

Code: Cyb, Vader, Ghastly Dragon (ZScript conversion)
GLDefs: Ghastly Dragon, Sandypaper (Brightmaps)
Sounds: Id Software
Sprites: Id Software
Sprite Edit: Vader, Nanami (recolor)
Idea Base: Cyb
*/
Class VoidDarkImp : Actor
{
  Default
  {
    Health 130;
    Radius 20;
    Height 56;
    Speed 7;
    PainChance 200;
    SeeSound "imp/sight";
    PainSound "imp/pain";
    DeathSound "imp/death";
    ActiveSound "imp/active";
    Obituary "%o was cursed by a dark imp.";
    HitObituary "%o was touched by a dark imp.";
    MONSTER;
    +FLOORCLIP
  }

  States
  {
  Spawn:
    DRKV AB 10 A_Look();
    Loop;
  See:
    DRKV AABBCCDD 3 A_Chase();
    Loop;
  Melee:
    DRKV EF 8 A_FaceTarget();
    DRKV G 6 A_CustomComboAttack("DarkNormal", 32, 3*random(1,8), "imp/melee");
    Goto See;
  Missile:
    DRKV E 0 A_Jump(64,"Missile2");
    DRKV EF 8 A_FaceTarget();
    DRKV G 6 A_SpawnProjectile("DarkNormal", 32, 0, 0);
    Goto Missile3;
  Missile2:
    DRKV IJ 8 Bright A_FaceTarget();
    DRKV K 6 Bright A_SpawnProjectile("DarkStrong", 32, 0, 0);
  Missile3:
    DRKV E 0 A_Jump(64,"Missile4");
    DRKV EF 8 A_FaceTarget();
    DRKV G 6 A_SpawnProjectile("DarkNormal", 32, 0, 0);
    Goto See;
  Missile4:
    DRKV IJ 8 Bright A_FaceTarget();
    DRKV K 6 Bright A_SpawnProjectile("DarkStrong", 32, 0, 0);
    Goto See;
  Pain:
    DRKV H 2;
    DRKV H 2 A_Pain();
    Goto See;
  Death:
    DRKV L 8;
    DRKV M 8 A_Scream();
    DRKV N 5;
    DRKV O 5 A_Fall();
    DRKV P -1;
    Stop;
  XDeath:
    DRKI N 5;
    DRKI O 5 A_XScream();
    DRKI P 5;
    DRKI Q 5 A_Fall();
    DRKI RST 5;
    DRKI U -1;
    Stop;
  Raise:
    DRKV PO 8;
    DRKV NML 6;
    Goto See;
  }
}

Class DarkNormal : Actor
{
  Default
  {
    Radius 8;
    Height 6;
    Speed 9;
    Damage 3;
    RENDERSTYLE "ADD";
    ALPHA 0.67;
    SeeSound "imp/attack";
    DeathSound "imp/shotx";
    Decal "DoomImpScorch";
    PROJECTILE;
  }

  States
  {
  Spawn:
    DKB1 AB 4 Bright;
    Loop;
  Death:
    DKB1 CDE 4 Bright;
    Stop;
  }
}

Class DarkStrong : Actor
{
  Default
  {
    Radius 8;
    Height 6;
    Speed 9;
    Damage 6;
    RENDERSTYLE "ADD";
    ALPHA 0.67;
    SeeSound "imp/attack";
    DeathSound "imp/shotx";
    Decal "DoomImpScorch";
    PROJECTILE;
  }

  States
  {
  Spawn:
    DKB2 AB 4 Bright A_SpawnItemEx("DarkTail", 0, 0, 0, 0, 0, 0, 0, 128);
    Loop;
  Death:
    DKB2 CDE 4 Bright;
    Stop;
  }
}

Class DarkTail : Actor
{
  Default
  {
    RENDERSTYLE "ADD";
    ALPHA 0.5;
    PROJECTILE;
    +NOCLIP
  }

  States
  {
  Spawn:
    DKBT ABCDEF 2 Bright;
    Stop;
  }
}



// End MRW